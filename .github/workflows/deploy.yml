name: Deploy to AWS EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs: >
          SECRET_KEY,
          GEMINI_API_KEY,
          SGIS_CONSUMER_KEY,
          SGIS_CONSUMER_SECRET,
          DATABASE_URL,
          AWS_ACCESS_KEY_ID,
          AWS_SECRET_ACCESS_KEY,
          AWS_STORAGE_BUCKET_NAME,
          ALLOWED_HOSTS,
          CORS_ALLOWED_ORIGINS,
          DOBONG_OPENAPI_KEY,
          GYEONGGI_OPENAPI_KEY,
          JONGNO_OPENAPI_KEY,
          FIREBASE_CREDENTIALS
        script: |
          set -e
          
          echo "🚀 Starting deployment..."
          
          # Firebase credentials 파일 생성
          cd /home/ubuntu/Villit_BE
          mkdir -p localadmin
          echo "${{ secrets.FIREBASE_CREDENTIALS }}" > localadmin/firebase-credentials.json

          # 프로젝트 디렉토리로 이동
          cd /home/ubuntu/Villit_BE
          
          # .env 파일 자동 생성 (GitHub Secrets에서)
          cat > localadmin/.env << EOF
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          SGIS_CONSUMER_KEY=${{ secrets.SGIS_CONSUMER_KEY }}
          SGIS_CONSUMER_SECRET=${{ secrets.SGIS_CONSUMER_SECRET }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME=${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          AWS_S3_REGION_NAME=ap-northeast-2
          CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
          ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} 
          DOBONG_OPENAPI_KEY=${{ secrets.DOBONG_OPENAPI_KEY }}
          GYEONGGI_OPENAPI_KEY=${{ secrets.GYEONGGI_OPENAPI_KEY }}
          JONGNO_OPENAPI_KEY=${{ secrets.JONGNO_OPENAPI_KEY }}
          FIREBASE_CREDENTIALS_PATH=/home/ubuntu/Villit_BE/localadmin/firebase-credentials.json
          EOF
          
          # Git 업데이트
          git fetch origin main
          git reset --hard origin/main
          
          # 가상환경 활성화
          source venv/bin/activate
          
          # 의존성 설치
          pip install -r requirements.txt
          
          # 환경변수 설정
          export DJANGO_ENV=production
          export DJANGO_SETTINGS_MODULE=localadmin.settings.production
          
          # Django 명령어들
          cd localadmin
          python manage.py migrate
          python manage.py create_initial_data --force
          python manage.py load_regions
          python manage.py fetch_dobong_docs
          python manage.py fetch_gyeonggi_docs
          python manage.py collectstatic --noinput
          
          # 서비스 재시작
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx
          
          echo "✅ Deployment successful!"